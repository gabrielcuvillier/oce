set(TOOLKIT TKService)

set(TOOLKIT_MODULES
	Aspect
	SelectBasics
	Image
	InterfaceGraphic
	TColQuantity
)

if(NOT OCE_DISABLE_TKSERVICE_FONT)
	set(TOOLKIT_MODULES ${TOOLKIT_MODULES} Font)
else()
	set(TOOLKIT_INCLUDE_DIRECTORIES ${TOOLKIT_INCLUDE_DIRECTORIES} "${OCE_SOURCE_DIR}/src/Font/")
endif()

if (WIN32)
	set(TOOLKIT_MODULES ${TOOLKIT_MODULES}
		WNT
	)
else(WIN32)
	if (APPLE AND OCE_OSX_USE_COCOA)
		set(TOOLKIT_MODULES ${TOOLKIT_MODULES}
			Cocoa
		)
		set(TOOLKIT_LIBS /System/Library/Frameworks/Cocoa.framework)
	else(APPLE AND OCE_OSX_USE_COCOA)
    if (EMSCRIPTEN)
      set(TOOLKIT_MODULES ${TOOLKIT_MODULES}
          EmscriptenWindow
      )
    else(EMSCRIPTEN)
		  set(TOOLKIT_MODULES ${TOOLKIT_MODULES}
			  Xw
		  )
		  set(TOOLKIT_LIBS ${X11_LIBRARIES} ${OPENGL_LIBRARIES})
    endif(EMSCRIPTEN)
	endif(APPLE AND OCE_OSX_USE_COCOA)
endif(WIN32)
set(TOOLKIT_DEPENDS
	TKMath
	TKernel
	TKBRep
	TKShHealing
	TKGeomBase
	TKGeomAlgo
	TKG2d
	TKG3d
	TKTopAlgo
)

if(OCE_REQUIRES_FREETYPE)
	set(TOOLKIT_INCLUDE_DIRECTORIES ${TOOLKIT_INCLUDE_DIRECTORIES} ${FREETYPE_INCLUDE_DIRS})
	if(CMAKE_CONFIGURATION_TYPES OR NMAKE)
		set(TOOLKIT_LIBS_DEBUG ${TOOLKIT_LIBS_DEBUG} ${FREETYPE_LIBRARY_DEBUG})
		set(TOOLKIT_LIBS_OPTIMIZED ${TOOLKIT_LIBS_OPTIMIZED} ${FREETYPE_LIBRARIES})
	else(CMAKE_CONFIGURATION_TYPES OR NMAKE)
		set(TOOLKIT_LIBS ${TOOLKIT_LIBS} ${FREETYPE_LIBRARIES})
	endif(CMAKE_CONFIGURATION_TYPES OR NMAKE)
endif()

if(FREEIMAGE_LIBRARY AND OCE_WITH_FREEIMAGE)
	add_definitions(-DHAVE_FREEIMAGE)

	if(CMAKE_CONFIGURATION_TYPES OR NMAKE)
		set(TOOLKIT_LIBS_DEBUG ${TOOLKIT_LIBS_DEBUG} ${FREEIMAGE_LIBRARY_DEBUG})
		set(TOOLKIT_LIBS_OPTIMIZED ${TOOLKIT_LIBS_OPTIMIZED} ${FREEIMAGE_LIBRARY})
	else (CMAKE_CONFIGURATION_TYPES OR NMAKE)
		set(TOOLKIT_LIBS ${TOOLKIT_LIBS} ${FREEIMAGE_LIBRARY})
	endif(CMAKE_CONFIGURATION_TYPES OR NMAKE)

	set(TOOLKIT_INCLUDE_DIRECTORIES ${TOOLKIT_INCLUDE_DIRECTORIES} ${FREEIMAGE_INCLUDE_DIR})
endif(FREEIMAGE_LIBRARY AND OCE_WITH_FREEIMAGE)

if(FONTCONFIG_FOUND AND OCE_WITH_FONTCONFIG)
	add_definitions(-DHAVE_FONTCONFIG)

	if(CMAKE_CONFIGURATION_TYPES OR NMAKE)
		set(TOOLKIT_LIBS_DEBUG ${TOOLKIT_LIBS_DEBUG} ${FONTCONFIG_LIBRARIES})
		set(TOOLKIT_LIBS_OPTIMIZED ${TOOLKIT_LIBS_OPTIMIZED} ${FONTCONFIG_LIBRARIES})
	else (CMAKE_CONFIGURATION_TYPES OR NMAKE)
		set(TOOLKIT_LIBS ${TOOLKIT_LIBS} ${FONTCONFIG_LIBRARIES})
	endif(CMAKE_CONFIGURATION_TYPES OR NMAKE)

	set(TOOLKIT_INCLUDE_DIRECTORIES ${TOOLKIT_INCLUDE_DIRECTORIES} ${FONTCONFIG_INCLUDE_DIRS})
endif(FONTCONFIG_FOUND AND OCE_WITH_FONTCONFIG)

include(../BuildToolkit.cmake)

if (EMSCRIPTEN AND NOT OCE_DISABLE_TKSERVICE_FONT)
  # Freetype is being used due to FTFont class
  #
  # Use the Freetype port provided by Emscripten
  # Keep this specific compile option private, as modules requiring TKService does not need to know about Freetype at compilation time
  target_compile_options(TKService PRIVATE -s USE_FREETYPE=1)
  # In an ideal world we would use "target_link_options" also, this time with PUBLIC instead of PRIVATE for linking purposes
  # but his command is only available starting CMake 3.13...
endif(EMSCRIPTEN AND NOT OCE_DISABLE_TKSERVICE_FONT)
